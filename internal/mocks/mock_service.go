// Code generated by MockGen. DO NOT EDIT.
// Source: shorturl/internal/app/service/service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	storage "github.com/golangTroshin/shorturl/internal/app/storage"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// BatchShortenURLs mocks base method.
func (m *MockService) BatchShortenURLs(ctx context.Context, urls []storage.RequestBodyBanch) ([]storage.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BatchShortenURLs", ctx, urls)
	ret0, _ := ret[0].([]storage.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BatchShortenURLs indicates an expected call of BatchShortenURLs.
func (mr *MockServiceMockRecorder) BatchShortenURLs(ctx, urls interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchShortenURLs", reflect.TypeOf((*MockService)(nil).BatchShortenURLs), ctx, urls)
}

// DeleteUserURLs mocks base method.
func (m *MockService) DeleteUserURLs(ctx context.Context, shortURLs []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteUserURLs", ctx, shortURLs)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteUserURLs indicates an expected call of DeleteUserURLs.
func (mr *MockServiceMockRecorder) DeleteUserURLs(ctx, shortURLs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUserURLs", reflect.TypeOf((*MockService)(nil).DeleteUserURLs), ctx, shortURLs)
}

// GetOriginalURL mocks base method.
func (m *MockService) GetOriginalURL(ctx context.Context, shortURL string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOriginalURL", ctx, shortURL)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOriginalURL indicates an expected call of GetOriginalURL.
func (mr *MockServiceMockRecorder) GetOriginalURL(ctx, shortURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOriginalURL", reflect.TypeOf((*MockService)(nil).GetOriginalURL), ctx, shortURL)
}

// GetStats mocks base method.
func (m *MockService) GetStats(ctx context.Context) (storage.Stats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStats", ctx)
	ret0, _ := ret[0].(storage.Stats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStats indicates an expected call of GetStats.
func (mr *MockServiceMockRecorder) GetStats(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStats", reflect.TypeOf((*MockService)(nil).GetStats), ctx)
}

// GetUserURLs mocks base method.
func (m *MockService) GetUserURLs(ctx context.Context) ([]storage.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserURLs", ctx)
	ret0, _ := ret[0].([]storage.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserURLs indicates an expected call of GetUserURLs.
func (mr *MockServiceMockRecorder) GetUserURLs(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserURLs", reflect.TypeOf((*MockService)(nil).GetUserURLs), ctx)
}

// PingDatabase mocks base method.
func (m *MockService) PingDatabase(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PingDatabase", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// PingDatabase indicates an expected call of PingDatabase.
func (mr *MockServiceMockRecorder) PingDatabase(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingDatabase", reflect.TypeOf((*MockService)(nil).PingDatabase), ctx)
}

// ShortenURL mocks base method.
func (m *MockService) ShortenURL(ctx context.Context, originalURL string) (storage.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShortenURL", ctx, originalURL)
	ret0, _ := ret[0].(storage.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ShortenURL indicates an expected call of ShortenURL.
func (mr *MockServiceMockRecorder) ShortenURL(ctx, originalURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShortenURL", reflect.TypeOf((*MockService)(nil).ShortenURL), ctx, originalURL)
}
